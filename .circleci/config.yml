version: 2.1

jobs:

  build:
    docker:
      - image: circleci/node:15.12.0
    steps:
      - checkout
      - restore_cache:
          keys:
            # when lock file changes, use increasingly general patterns to restore cache
            - yarn-packages-v1-{{ .Branch }}-{{ checksum "yarn.lock" }}
            - yarn-packages-v1-{{ .Branch }}-
            - yarn-packages-v1-
      - run:
          name: Install dependencies
          command: yarn install
      - save_cache:
          paths:
            - ~/.cache/yarn
          key: yarn-packages-v1-{{ .Branch }}-{{ checksum "yarn.lock" }}
      - run:
          name: Build Website
          command: yarn build
      - persist_to_workspace:
          root: .
          paths:
            - dist
            - node_modules

  deploy-to-server:
    docker:
      - image: circleci/node:15.12.0
    steps:
      - checkout
      - add_ssh_keys:
          fingerprints:
            - "cf:6e:be:38:32:ee:93:c5:83:fb:73:5c:b1:60:9b:05"
      - attach_workspace:
          at: .
      - run:
          name: Copy files to remote server
          command: |
            echo $HOST_FINGERPRINT >> ~/.ssh/known_hosts
            scp -r dist/* ${REMOTE_ADDR}:${DEPLOY_DIR}

  test-server-connection:
    docker:
      - image: circleci/node:15.12.0
    steps:
      - checkout
      - add_ssh_keys:
          fingerprints:
            - "cf:6e:be:38:32:ee:93:c5:83:fb:73:5c:b1:60:9b:05"
      - attach_workspace:
          at: .
      - run:
          name: Communicate with server
          command: |
            echo $HOST_FINGERPRINT >> ~/.ssh/known_hosts
            ls dist
            ssh $REMOTE_ADDR "ls ${DEPLOY_DIR} && echo 'Hello!' > ${DEPLOY_DIR}/test.txt"

workflows:
  version: 2.1
  build-deploy:
    jobs:
      - build
      - test-server-connection:
          requires:
            - build
          filters:
            branches:
              only: /circleci.*/
      - deploy-to-server:
          requires:
            - build
          filters:
            branches:
              only: /master/
